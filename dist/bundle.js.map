{"version":3,"sources":["webpack://robin-admin/./webpack.config.js","webpack://robin-admin/webpack/bootstrap","webpack://robin-admin/webpack/startup"],"names":["module","exports","entry","output","filename","path","__dirname","devtool","resolve","extensions","rules","test","loader","enforce","externals","__webpack_module_cache__","__webpack_require__","moduleId","__webpack_modules__"],"mappings":"qBAAAA,EAAOC,QAAU,CACbC,MAAO,kBACPC,OAAQ,CACJC,SAAU,YACVC,KAAMC,UAIVC,QAAS,aAETC,QAAS,CAELC,WAAY,CAAC,MAAO,OAAQ,MAAO,UAGvCT,OAAQ,CACJU,MAAO,CAEH,CAAEC,KAAM,UAAWC,OAAQ,6BAG3B,CAAEC,QAAS,MAAOF,KAAM,QAASC,OAAQ,uBAQjDE,UAAW,CACP,MAAS,QACT,YAAa,eC9BjBC,EAA2B,IAG/B,SAASC,EAAoBC,GAE5B,GAAGF,EAAyBE,GAC3B,OAAOF,EAAyBE,GAAUhB,QAG3C,IAAID,EAASe,EAAyBE,GAAY,CAGjDhB,QAAS,IAOV,OAHAiB,EAAoBD,GAAUjB,EAAQA,EAAOC,QAASe,GAG/ChB,EAAOC,QCjBWe,CAAoB,M","file":"bundle.js","sourcesContent":["module.exports = {\n    entry: \"./src/index.tsx\",\n    output: {\n        filename: \"bundle.js\",\n        path: __dirname + \"/dist\"\n    },\n\n    // Enable sourcemaps for debugging webpack's output.\n    devtool: \"source-map\",\n\n    resolve: {\n        // Add '.ts' and '.tsx' as resolvable extensions.\n        extensions: [\".ts\", \".tsx\", \".js\", \".json\"]\n    },\n\n    module: {\n        rules: [\n            // All files with a '.ts' or '.tsx' extension will be handled by 'awesome-typescript-loader'.\n            { test: /\\.tsx?$/, loader: \"awesome-typescript-loader\" },\n\n            // All output '.js' files will have any sourcemaps re-processed by 'source-map-loader'.\n            { enforce: \"pre\", test: /\\.js$/, loader: \"source-map-loader\" }\n        ]\n    },\n\n    // When importing a module whose path matches one of the following, just\n    // assume a corresponding global variable exists and use that instead.\n    // This is important because it allows us to avoid bundling all of our\n    // dependencies, which allows browsers to cache those libraries between builds.\n    externals: {\n        \"react\": \"React\",\n        \"react-dom\": \"ReactDOM\"\n    }\n};","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tif(__webpack_module_cache__[moduleId]) {\n\t\treturn __webpack_module_cache__[moduleId].exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(271);\n"],"sourceRoot":""}